1)
a)Print odd numbers in an array

const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  //start-here
  //Your code goes here … replace the below line with your code logic 
 let inputArry = userInput[0].split(" ");
 
 (function() {
 for(let i=0; i<inputArry.length; i++) {
     if(+inputArry[i]%2 !== 0) {
         console.log(inputArry[i]);
     }
 }
 })();
  
});

Input : 0 1 3 4 6 7

---------------------------------------------------------------------------------------
b)
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  //start-here
  //Your code goes here … replace the below line with your code logic 
 let inputArry = userInput[0].split(" ");
 
 let capArray = (function() {
 let newArray = [];
 for(let i=0; i<inputArry.length; i++) {
     newArray.push(inputArry[i].replace(inputArry[i].charAt(0), inputArry[i].charAt(0).toUpperCase()));
 }
 
   return newArray;  
 })();
  
 console.log(capArray); 
});
---------------------------------------------------------------------------------------
c)Sum of all numbers in an array

const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  //start-here
  //Your code goes here … replace the below line with your code logic 
 let inputArry = userInput[0].split(" ");
 
 let sum = (function() {
 let total = 0
 for(let i=0; i<inputArry.length; i++) {
     total = total + +inputArry[i];
     }
     return total;
 })();
  
 console.log(sum); 
});

Input : 0 1 3 4 6 7

------------------------------------------------------------------------
d) Return all the prime numbers in an array

const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  //start-here
  //Your code goes here … replace the below line with your code logic 
 let inputArry = userInput[0].split(" ");
 
 let primeArray = (function() {
 let newArray = [];
 for(let i=0; i<inputArry.length; i++) {
     isPrime = true;
     for(let itr=2; itr <= +inputArry[i]/2; itr++) {
         if(+inputArry[i]%itr===0) {
             isPrime = false;
             break;
         }
     }
     if(isPrime && !(+inputArry[i]==1 || +inputArry[i]===0)) {
         newArray.push(+inputArry[i]);
     }
 }
 
   return newArray;  
 })();
  
 console.log(primeArray); 
});

-----------------------------------------------------------------------
e) Return all the palindromes in an array

const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  //start-here
  //Your code goes here … replace the below line with your code logic 
 let inputArry = userInput[0].split(" ");
 
 let primeArray = (function() {
 let newArray = [];
 for(let i=0; i<inputArry.length; i++) {
     if(isPalindrome(inputArry[i])) {
         newArray.push(inputArry[i]);
     }
     
 }
  
 
   return newArray;  
 })();
 
 function isPalindrome(word){
     palindrome = true
     for(i=0 ; i <= word.length/2; i++){
             if(word.charAt(i)!==word.charAt(word.length - 1 - i)) {
                 palindrome = false;
             }
     }
     
     return palindrome;
 }
  
 console.log(primeArray); 
});

---------------------------------------------------------------------------------------

f) Return median of two sorted arrays of same size.

const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  //start-here
  //Your code goes here … replace the below line with your code logic 
 let sortedArray1 = [1,2,3,4];
 let sortedArray2=[10,12,13,14]
 
 let result = (function() {
 let newArray = sortedArray1.slice();
  newArray = newArray.concat(sortedArray2);
  console.log(newArray);
  if(newArray.length%2 === 0){
      return (newArray[newArray.length/2] + newArray[newArray.length/2-1])/2;
  }
  else {
      return newArray[newArray.length/2-0.5];
  }
})()

console.log(result);
});

---------------------------------------------------------------------------------------
g) Remove duplicates from an array


inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  //start-here
  //Your code goes here … replace the below line with your code logic 
 let inputArr = [1,2,3,4,1,2,3,4];
 let uniqueArr = [];
 
 let result = (function() {
     for( let i of inputArr) {
     if(uniqueArr.indexOf(i) == -1) {
         uniqueArr.push(i);
     }
     }
     return uniqueArr;
})()

console.log(result);
});

--------------------------------------------------------------------------------------
h) Shift a number k times


inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  //start-here
  //Your code goes here … replace the below line with your code logic 
 let inputArr = [1,2,3,4,5,6,7,8,9,0];
 let uniqueArr = [];
 k = 4
 let result = (function() {
     for( let i=0 ; i < k ; i++) {
       inputArr.push(inputArr.shift());
     }
     return inputArr;
})()

console.log(result);
});

-------------------------------------------------------------------------------------------
Arrow functions
-------------------------------------------------------------------------------------------
a) Even numbers in a array.
inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  //start-here
  //Your code goes here … replace the below line with your code logic 
 let inputArry = userInput[0].split(" ");
 
 let a = () => {
 for(let i=0; i<inputArry.length; i++) {
     if(+inputArry[i]%2 === 0) {
         console.log(inputArry[i]);
     }
 }
 };
 a();
 
  
});

input : 1 2 3 4 5
----------------------------------------------------------------------------------------
b)Title case in capital


inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  //start-here
  //Your code goes here … replace the below line with your code logic 
 let inputArry = userInput[0].split(" ");
 
 let capArray = () =>  {
 let newArray = [];
 for(let i=0; i<inputArry.length; i++) {
     newArray.push(inputArry[i].replace(inputArry[i].charAt(0), inputArry[i].charAt(0).toUpperCase()));
 }
 
    console.log(newArray);  
 }
 capArray();
  
// console.log(capArray); 
});
----------------------------------------------------------------------------------------------
c) sum of the array

const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  //start-here
  //Your code goes here … replace the below line with your code logic 
 let inputArry = userInput[0].split(" ");
 
 let sum = () => {
 let total = 0
 for(let i=0; i<inputArry.length; i++) {
     total = total + +inputArry[i];
     }
     console.log(total);
 }
  
sum();
});

input : 1 2 3 4 5
-------------------------------------------------------------------------------------------
4) prime numbers

const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  //start-here
  //Your code goes here … replace the below line with your code logic 
 let inputArry = userInput[0].split(" ");
 
 let primeArray = () => {
 let newArray = [];
 for(let i=0; i<inputArry.length; i++) {
     isPrime = true;
     for(let itr=2; itr <= +inputArry[i]/2; itr++) {
         if(+inputArry[i]%itr===0) {
             isPrime = false;
             break;
         }
     }
     if(isPrime && !(+inputArry[i]==1 || +inputArry[i]===0)) {
         newArray.push(+inputArry[i]);
     }
 }
 
    console.log(newArray);  
 }
 primeArray();
  
 
});

// -----------------------------------------------------------------------
//e) Return all the palindromes in an array

const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  //start-here
  //Your code goes here … replace the below line with your code logic 
 let inputArry = userInput[0].split(" ");
 
 let isPalindrome = (word) => {
     palindrome = true
     for(i=0 ; i <= word.length/2; i++){
             if(word.charAt(i)!==word.charAt(word.length - 1 - i)) {
                 palindrome = false;
             }
     }
     
     return palindrome;
 }
 
 let primeArray = (function() {
 let newArray = [];
 for(let i=0; i<inputArry.length; i++) {
     if(isPalindrome(inputArry[i])) {
         newArray.push(inputArry[i]);
     }
     
 }
  
 
  return newArray;  
 })();
 
 
  
 console.log(primeArray); 
});
----------------------------------------------------------------------------------------
